{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/angham/Desktop/first-nextjs-app/pages/patmanShows.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from './components/HOC';\nvar pageTitleStyle = {\n  color: 'green'\n};\nvar filmTitleStyle = {\n  color: 'red'\n};\n\nvar BatmanShows = function BatmanShows(props) {\n  console.log(999, props);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    style: pageTitleStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Batman Shows\"), props.shows.map(function (show) {\n    __jsx(\"div\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      style: filmTitleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, show.name), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \" Link: \"), __jsx(Link, {\n      href: \"/show/[id]\",\n      as: \"/show/\".concat(show.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, show.name)));\n  }));\n};\n\nBatmanShows.getInitialProps = function _callee() {\n  var response, shows;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          response = _context.sent;\n          shows = response.json();\n          console.log(11111, shows);\n          return _context.abrupt(\"return\", {\n            shows: shows.map(function (film) {\n              return film.show;\n            })\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Layout(BatmanShows);","map":{"version":3,"sources":["/home/angham/Desktop/first-nextjs-app/pages/patmanShows.js"],"names":["Link","fetch","Layout","pageTitleStyle","color","filmTitleStyle","BatmanShows","props","console","log","shows","map","show","id","name","getInitialProps","response","json","film"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE;AADc,CAAvB;AAIA,IAAMC,cAAc,GAAG;AACrBD,EAAAA,KAAK,EAAE;AADc,CAAvB;;AAIA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,KAAjB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAEJ,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGI,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACvB;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAER,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,IAAI,CAACE,IADR,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAKE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,EAAE,kBAAWF,IAAI,CAACE,IAAhB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACE,IAAT,CADF,CALF;AASD,GAVA,CAFH,CADF;AAiBD,CAnBD;;AAqBAR,WAAW,CAACS,eAAZ,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLd,KAAK,CAAC,8CAAD,CADA;;AAAA;AACtBe,UAAAA,QADsB;AAEtBN,UAAAA,KAFsB,GAEdM,QAAQ,CAACC,IAAT,EAFc;AAG5BT,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBC,KAAnB;AAH4B,2CAIrB;AACLA,YAAAA,KAAK,EAAEA,KAAK,CAACC,GAAN,CAAU,UAAAO,IAAI;AAAA,qBAAIA,IAAI,CAACN,IAAT;AAAA,aAAd;AADF,WAJqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AASA,eAAeV,MAAM,CAACI,WAAD,CAArB","sourcesContent":["import Link from 'next/link';\n\nimport fetch from 'isomorphic-unfetch';\n\nimport Layout from './components/HOC';\n\nconst pageTitleStyle = {\n  color: 'green',\n};\n\nconst filmTitleStyle = {\n  color: 'red',\n};\n\nconst BatmanShows = props => {\n  console.log(999, props)\n  return (\n    <div>\n      <h2 style={pageTitleStyle}>Batman Shows</h2>\n      {props.shows.map(show => {\n        <div key={show.id}>\n          <span style={filmTitleStyle}>\n            {show.name}\n          </span>\n          <span> Link: </span>\n          <Link href=\"/show/[id]\" as={`/show/${show.name}`}>\n            <a>{show.name}</a>\n          </Link>\n        </div>\n      })}\n    </div>\n  )\n\n};\n\nBatmanShows.getInitialProps = async () => {\n  const response = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const shows = response.json();\n  console.log(11111, shows);\n  return {\n    shows: shows.map(film => film.show)\n  }\n}\n\nexport default Layout(BatmanShows);\n"]},"metadata":{},"sourceType":"module"}