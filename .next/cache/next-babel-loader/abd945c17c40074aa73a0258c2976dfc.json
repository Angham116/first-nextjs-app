{"ast":null,"code":"var _jsxFileName = \"/home/angham/Desktop/first-nextjs-app/pages/patmanShows.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from './components/HOC';\nconst pageTitleStyle = {\n  color: 'green'\n};\nconst filmTitleStyle = {\n  color: 'red'\n};\n\nconst BatmanShows = props => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    style: pageTitleStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Batman Shows\"), props.shows.map(show => {\n    __jsx(\"div\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      style: filmTitleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, show.name), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \" Link: \"), __jsx(Link, {\n      href: \"/show/[id]\",\n      as: `/show/${show.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, show.name)));\n  }));\n};\n\nBatmanShows.getInitialProps = async () => {\n  const response = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const shows = response.json();\n  console.log(11111, shows);\n  return {\n    shows: shows.map(film => film.show)\n  };\n};\n\nexport default Layout(BatmanShows);","map":{"version":3,"sources":["/home/angham/Desktop/first-nextjs-app/pages/patmanShows.js"],"names":["Link","Layout","pageTitleStyle","color","filmTitleStyle","BatmanShows","props","shows","map","show","id","name","getInitialProps","response","fetch","json","console","log","film"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE;AADc,CAAvB;AAIA,MAAMC,cAAc,GAAG;AACrBD,EAAAA,KAAK,EAAE;AADc,CAAvB;;AAIA,MAAME,WAAW,GAAGC,KAAK,IAAI;AAC3B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAEJ,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGI,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAI;AACvB;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAEN,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,IAAI,CAACE,IADR,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAKE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,EAAE,EAAG,SAAQF,IAAI,CAACE,IAAK,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACE,IAAT,CADF,CALF;AASD,GAVA,CAFH,CADF;AAiBD,CAlBD;;AAoBAN,WAAW,CAACO,eAAZ,GAA8B,YAAY;AACxC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAAD,CAA5B;AACA,QAAMP,KAAK,GAAGM,QAAQ,CAACE,IAAT,EAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBV,KAAnB;AACA,SAAO;AACLA,IAAAA,KAAK,EAAEA,KAAK,CAACC,GAAN,CAAUU,IAAI,IAAIA,IAAI,CAACT,IAAvB;AADF,GAAP;AAGD,CAPD;;AASA,eAAeR,MAAM,CAACI,WAAD,CAArB","sourcesContent":["import Link from 'next/link';\nimport Layout from './components/HOC';\n\nconst pageTitleStyle = {\n  color: 'green',\n};\n\nconst filmTitleStyle = {\n  color: 'red',\n};\n\nconst BatmanShows = props => {\n  return (\n    <div>\n      <h2 style={pageTitleStyle}>Batman Shows</h2>\n      {props.shows.map(show => {\n        <div key={show.id}>\n          <span style={filmTitleStyle}>\n            {show.name}\n          </span>\n          <span> Link: </span>\n          <Link href=\"/show/[id]\" as={`/show/${show.name}`}>\n            <a>{show.name}</a>\n          </Link>\n        </div>\n      })}\n    </div>\n  )\n\n};\n\nBatmanShows.getInitialProps = async () => {\n  const response = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const shows = response.json();\n  console.log(11111, shows);\n  return {\n    shows: shows.map(film => film.show)\n  }\n}\n\nexport default Layout(BatmanShows);\n"]},"metadata":{},"sourceType":"module"}